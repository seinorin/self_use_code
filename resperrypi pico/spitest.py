from machine import Pin,Timer,UART,PWM
from rp2 import PIO,asm_pio #状态机库
import time,_thread,rp2

sin_num=[0x7FF,0x831,0x863,0x896,0x8C8,0x8FA,0x92B,0x95D,0x98E,0x9C0,0x9F1,0xA21,0xA51,0xA81,0xAB1,0xAE0
,0xB0F,0xB3D,0xB6A,0xB98,0xBC4,0xBF0,0xC1C,0xC46,0xC71,0xC9A,0xCC3,0xCEB,0xD12,0xD38,0xD5E,0xD83
,0xDA7,0xDCA,0xDEC,0xE0D,0xE2E,0xE4D,0xE6C,0xE89,0xEA5,0xEC1,0xEDB,0xEF5,0xF0D,0xF24,0xF3A,0xF4F
,0xF63,0xF75,0xF87,0xF97,0xFA6,0xFB4,0xFC1,0xFCD,0xFD7,0xFE0,0xFE8,0xFEF,0xFF5,0xFF9,0xFFC,0xFFE
,0xFFE,0xFFE,0xFFC,0xFF9,0xFF5,0xFEF,0xFE8,0xFE0,0xFD7,0xFCD,0xFC1,0xFB4,0xFA6,0xF97,0xF87,0xF75
,0xF63,0xF4F,0xF3A,0xF24,0xF0D,0xEF5,0xEDB,0xEC1,0xEA5,0xE89,0xE6C,0xE4D,0xE2E,0xE0D,0xDEC,0xDCA
,0xDA7,0xD83,0xD5E,0xD38,0xD12,0xCEB,0xCC3,0xC9A,0xC71,0xC46,0xC1C,0xBF0,0xBC4,0xB98,0xB6A,0xB3D
,0xB0F,0xAE0,0xAB1,0xA81,0xA51,0xA21,0x9F1,0x9C0,0x98E,0x95D,0x92B,0x8FA,0x8C8,0x896,0x863,0x831
,0x7FF,0x7CD,0x79B,0x768,0x736,0x704,0x6D3,0x6A1,0x670,0x63E,0x60D,0x5DD,0x5AD,0x57D,0x54D,0x51E
,0x4EF,0x4C1,0x494,0x466,0x43A,0x40E,0x3E2,0x3B8,0x38D,0x364,0x33B,0x313,0x2EC,0x2C6,0x2A0,0x27B
,0x257,0x234,0x212,0x1F1,0x1D0,0x1B1,0x192,0x175,0x159,0x13D,0x123,0x109,0x0F1,0x0DA,0x0C4,0x0AF
,0x09B,0x089,0x077,0x067,0x058,0x04A,0x03D,0x031,0x027,0x01E,0x016,0x00F,0x009,0x005,0x002,0x000
,0x000,0x000,0x002,0x005,0x009,0x00F,0x016,0x01E,0x027,0x031,0x03D,0x04A,0x058,0x067,0x077,0x089
,0x09B,0x0AF,0x0C4,0x0DA,0x0F1,0x10A,0x123,0x13D,0x159,0x175,0x192,0x1B1,0x1D0,0x1F1,0x212,0x234
,0x257,0x27B,0x2A0,0x2C6,0x2EC,0x313,0x33B,0x364,0x38D,0x3B8,0x3E2,0x40E,0x43A,0x466,0x494,0x4C1
,0x4EF,0x51E,0x54D,0x57D,0x5AD,0x5DD,0x60E,0x63E,0x670,0x6A1,0x6D3,0x704,0x736,0x768,0x79B,0x7CD]

@asm_pio(set_init=(rp2.PIO.OUT_LOW, rp2.PIO.OUT_HIGH), out_init=rp2.PIO.OUT_LOW,out_shiftdir=PIO.SHIFT_LEFT)
def blink():
    set(x,15)
    wrap_target()
    pull()
    set(pins,0x1)
    label("bitloop")
    out(pins, 1)
    set(pins,0x0)
    set(pins,0x1)
    jmp(x_dec, "bitloop")
    set(x, 15)
    set(pins,0x3)
    wrap()
sm1 = rp2.StateMachine(1, #第0号状态机，Pico总共有8个状态机，编号0到7
                      blink,#状态机运行程序
                      freq=125000000, # 状态机运行频率
                      in_base=None,#用于in指令
                      out_base=Pin(6),#用于out指令
                      set_base=Pin(7), # 起始针脚是GP25，对应于Pico板载的LED灯
                      jmp_pin=None,#jmp指令
                      sideset_base=None,#用于侧置指令
                      in_shiftdir=None,#ISR移动方向
                      out_shiftdir=None,#CSR移动方向
                      pull_thresh=16#拉取阈值
                      )
sm1.active(1)


# DI  = Pin(6,Pin.OUT)
# SCK = Pin(7,Pin.OUT)
# CS  = Pin(8,Pin.OUT)
LED = Pin(25,Pin.OUT)
i=0
def twinkle(tim):
    global sin_num
    global i
    data=sin_num[i]
    datenum=data|0x8000;
#     CS.value(0)
#     for i in range(16):
#         DI.value(datenum&0x8000)
#         SCK.value(0)
#         datenum=datenum<<1
#         SCK.value(1)
#     CS.value(1)
    if i == 255:
        i=0
    else:
        i=i+1
    sm1.put(datenum<<16)
#     print(i)
    LED.toggle()

if __name__ == '__main__':    
    # 构建定时器
    tim = Timer()
    # tim.init(period, mode, callback)
    # period:周期时间(单位为ms)
    # mode:工作模式，有Timer.ONE_SHOT(执行一次)和Timer.PERIODIC(周期性执行)两种
    # callback:定时器中断的回调函数
    tim.init(freq=10000, mode=Timer.PERIODIC, callback=twinkle)